/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frame.view;

import booking.Booking;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import testingSite.TestingSite;
import user.User;
import utility.API;
import utility.adapter.ResponseAdapter;
import utility.adapter.TextAdaptee;
import utility.search.SearchFacade;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.http.HttpResponse;
import java.text.ParseException;

/**
 *
 * @author Jacky
 */
public class CustomerView extends javax.swing.JFrame {

    private User user;
    /**
     * Creates new form TestingSitesFrame
     */
    public CustomerView(User user) {
        initComponents();
        this.user = user;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        welcomeUser = new javax.swing.JLabel();
        testingSiteType = new javax.swing.JComboBox<>();
        testingSiteWay = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        searchBox = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        bookingRefresh = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        bookingIdField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        searchBookingBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        welcomeUser.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        welcomeUser.setText("jLabel3");

        testingSiteType.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        testingSiteType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Hospital", "Clinic", "GPs" }));

        testingSiteWay.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        testingSiteWay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Drive-Through", "Walk In" }));

        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Open Time", "Close Time", "Waiting Time", "Site Type", "Status", "Booking"
            }
        ));
        jTable1.setRowHeight(30);
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Testing Sites");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Search: ");

        searchBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton1ActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                } catch (InterruptedException e) {
                    e.printStackTrace();
                } catch (ParseException e) {
                    e.printStackTrace();
                }
            }
        });

        searchButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    searchButtonActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                } catch (ParseException e) {
                    e.printStackTrace();
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(17, 17, 17))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(welcomeUser, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(testingSiteType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(testingSiteWay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(searchButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(welcomeUser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(searchButton)
                    .addComponent(testingSiteType, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(testingSiteWay, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Search", jPanel1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Testing Site", "Date", "Time", "Edit"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable2.setRowHeight(30);
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(2).setMinWidth(200);
            jTable2.getColumnModel().getColumn(2).setMaxWidth(500);
        }

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setText("Active Bookings");

        bookingRefresh.setText("Refresh");
        bookingRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    bookingRefreshActionPerformed(evt);
                } catch (JsonProcessingException e) {
                    e.printStackTrace();
                } catch (InterruptedException e) {
                    e.printStackTrace();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 8, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 889, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(bookingRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27))))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bookingRefresh)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Profile", jPanel2);

        bookingIdField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Enter Booking ID:");

        searchBookingBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        searchBookingBtn.setText("Search");


        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(386, 386, 386)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(280, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bookingIdField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBookingBtn, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(263, 263, 263))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(55, 55, 55)
                .addComponent(bookingIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchBookingBtn)
                .addContainerGap(229, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Modify Booking", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void setUserName(String userName) {
        this.welcomeUser.setText("Welcome " + userName);
    }
    public TestingSite getTestingSite(){
        int row = jTable1.getSelectedRow();
        int column = jTable1.getSelectedColumn();
        return (TestingSite) jTable1.getValueAt(row, column);
    }
    public String getGeneratedButtonText(){
        return generatedButton.getText();
    }
    public User getUser(){
        return user;
    }
    public Booking getBooking(){
        int row = jTable2.getSelectedRow();
        int column = jTable2.getSelectedColumn();
        return (Booking) jTable2.getValueAt(row, column);
    }
    public String getBookingId(){
        return bookingIdField.getText();
    }

    public void showLatestTestingSites(String buttonClick) throws IOException, InterruptedException, ParseException {
        jTable1.setDefaultEditor(Object.class, null);
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        SearchFacade disCen = new SearchFacade();
        String suburb = searchBox.getText();
        String tsType = testingSiteType.getSelectedItem().toString();
        String tsWay = testingSiteWay.getSelectedItem().toString();

        while(model.getRowCount() > 0)
        {
            model.removeRow(0);
        }
        disCen.viewTestingSite(model, suburb, tsType, tsWay, buttonClick);

        jTable1.getColumn("Booking").setCellRenderer(new ButtonRenderer("Book"));
        jTable1.getColumn("Booking").setCellEditor(new ButtonEditor(new JCheckBox(),"Book"));
    }

    public void showBookings() throws JsonProcessingException {
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        while(model.getRowCount() > 0) {
            model.removeRow(0);
        }

        Object[] rowData = new Object[4];
        for (JsonNode booking : user.getBookings()) {
            if (!booking.get("status").asText().equals("COMPLETED") || !booking.get("status").asText().equals("DELETED")) {
                rowData[0] = booking.get("testingSite").get("name").asText();
                rowData[1] = booking.get("startTime").asText().substring(0,10);
                rowData[2] = booking.get("startTime").asText().substring(11,16);
                ResponseAdapter responseAdapter = new ResponseAdapter(new TextAdaptee());
                String resultText = responseAdapter.convertFormat(booking);
                ObjectMapper objectMapper = new ObjectMapper();
                Booking bookingObj = objectMapper.readValue(resultText, Booking.class);
                rowData[3] = bookingObj;
                model.addRow(rowData);
            }
        }
        jTable2.getColumn("Edit").setCellRenderer(new ButtonRenderer("Edit"));
        jTable2.getColumn("Edit").setCellEditor(new ButtonEditor(new JCheckBox(),"Edit"));
    }
    public void addGeneratedBtnListener(ActionListener actionListener){
        generatedButton.addActionListener(actionListener);
    }

    public void addSearchBookingBtnListener(ActionListener actionListener){
        searchBookingBtn.addActionListener(actionListener);
    }

    private void jButton1ActionPerformed(ActionEvent evt) throws IOException, InterruptedException, ParseException {//GEN-FIRST:event_jButton1ActionPerformed
        this.showLatestTestingSites("Refresh");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) throws IOException, ParseException, InterruptedException {//GEN-FIRST:event_searchButtonActionPerformed
        this.showLatestTestingSites("Search");
    }//GEN-LAST:event_searchButtonActionPerformed

    private void bookingRefreshActionPerformed(java.awt.event.ActionEvent evt) throws IOException, InterruptedException {//GEN-FIRST:event_bookingRefreshActionPerformed
        API api = new API("user/"+user.getId() + "?fields=bookings");
        HttpResponse<String> response = api.callGETAPI();
        ObjectMapper objectMapper = new ObjectMapper();
        JsonNode jsonNode = objectMapper.readTree(response.body());
        ResponseAdapter adapter = new ResponseAdapter(new TextAdaptee());
        String result = adapter.convertFormat(jsonNode);
        this.user = objectMapper.readValue(result,User.class);
        this.showBookings();
    }//GEN-LAST:event_bookingRefreshActionPerformed






    class ButtonRenderer extends JButton implements TableCellRenderer
    {
        private String btnTxt;
        public ButtonRenderer(String btnTxt) {
            this.btnTxt = btnTxt;
            setOpaque(true);
        }
        public Component getTableCellRendererComponent(JTable table, Object value,
                                                       boolean isSelected, boolean hasFocus, int row, int column) {
            setText((value == null) ? btnTxt : btnTxt);
            return this;
        }
    }
    class ButtonEditor extends DefaultCellEditor
    {
        private String label;
        private String btnTxt;

        public ButtonEditor(JCheckBox checkBox,String btnTxt)
        {
            super(checkBox);
            this.btnTxt = btnTxt;
        }
        public Component getTableCellEditorComponent(JTable table, Object value,
                                                     boolean isSelected, int row, int column)
        {
            label = (value == null) ? btnTxt : btnTxt;
            generatedButton.setText(label);
            return generatedButton;
        }
        public Object getCellEditorValue()
        {
            return new String(label);
        }
    }

    JButton generatedButton = new JButton();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bookingIdField;
    private javax.swing.JButton bookingRefresh;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton searchBookingBtn;
    private javax.swing.JTextField searchBox;
    private javax.swing.JButton searchButton;
    private javax.swing.JComboBox<String> testingSiteType;
    private javax.swing.JComboBox<String> testingSiteWay;
    private javax.swing.JLabel welcomeUser;
    // End of variables declaration//GEN-END:variables
}
